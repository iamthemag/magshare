name: Build MagShare

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Qt and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qttools5-dev-tools qtmultimedia5-dev \
            libqt5x11extras5-dev libxcb1-dev libxcb-screensaver0-dev libx11-dev \
            build-essential debhelper devscripts fakeroot

      - name: Build application
        run: |
          qmake magshare-desktop.pro
          make -j$(nproc)

      - name: Create .deb package
        run: |
          mkdir -p debian/magshare/usr/bin
          mkdir -p debian/magshare/usr/share/applications
          mkdir -p debian/magshare/usr/share/pixmaps
          mkdir -p debian/magshare/DEBIAN

          cp test/magshare debian/magshare/usr/bin/
          chmod +x debian/magshare/usr/bin/magshare
          cp src/images/magshare.png debian/magshare/usr/share/pixmaps/magshare.png

          cat > debian/magshare/usr/share/applications/magshare.desktop << EOF
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=MagShare
          Comment=Secure LAN Messenger and File Sharing
          Exec=magshare
          Icon=magshare
          Terminal=false
          Categories=Network;InstantMessaging;
          EOF

          cat > debian/magshare/DEBIAN/control << EOF
          Package: magshare
          Version: 1.1.2
          Section: net
          Priority: optional
          Architecture: amd64
          Depends: libqt5core5a, libqt5gui5, libqt5widgets5, libqt5network5, libqt5multimedia5
          Maintainer: MagShare Team <team@magshare.net>
          Description: Secure LAN Messenger and File Sharing
           MagShare is a secure peer-to-peer messenger and file sharing application
           designed for local area networks.
          EOF

          dpkg-deb --build debian/magshare
          mv debian/magshare.deb magshare_1.1.2_amd64.deb

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: magshare-linux
          path: |
            magshare_1.1.2_amd64.deb
            test/magshare

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build application
        run: |
          qmake magshare-desktop.pro
          nmake release
        shell: cmd

      - name: Deploy Qt dependencies
        run: |
          windeployqt.exe --release --dir test test\magshare.exe
        shell: cmd

      - name: Install NSIS
        run: choco install nsis -y
        shell: powershell

      - name: Create Windows installer with modern UI
        run: |
          cp src/magshare.ico magshare.ico
          echo "MagShare License" > LICENSE.txt

          cat > installer.nsi << 'EOF'
          !define APPNAME "MagShare"
          !define COMPANYNAME "MagShareSW"
          !define DESCRIPTION "Secure LAN Messenger and File Sharing"
          !define VERSION "1.1.2"

          !define MUI_ICON "magshare.ico"
          !define MUI_UNICON "magshare.ico"
          !define MUI_FINISHPAGE_RUN "$INSTDIR\magshare.exe"
          !define MUI_FINISHPAGE_RUN_TEXT "Run MagShare"

          !include "MUI2.nsh"

          Name "${APPNAME}"
          OutFile "MagShare-${VERSION}-Setup.exe"
          InstallDir "$PROGRAMFILES64\${APPNAME}"
          RequestExecutionLevel admin

          !insertmacro MUI_PAGE_WELCOME
          !insertmacro MUI_PAGE_LICENSE "LICENSE.txt"
          !insertmacro MUI_PAGE_DIRECTORY
          !insertmacro MUI_PAGE_INSTFILES
          !insertmacro MUI_PAGE_FINISH

          !insertmacro MUI_UNPAGE_CONFIRM
          !insertmacro MUI_UNPAGE_INSTFILES

          !insertmacro MUI_LANGUAGE "English"

          Section "Install"
            SetOutPath "$INSTDIR"
            File /r "test\*"

            CreateDirectory "$SMPROGRAMS\${APPNAME}"
            CreateShortCut "$SMPROGRAMS\${APPNAME}\${APPNAME}.lnk" "$INSTDIR\magshare.exe" "" "$INSTDIR\magshare.exe"
            CreateShortCut "$DESKTOP\${APPNAME}.lnk" "$INSTDIR\magshare.exe" "" "$INSTDIR\magshare.exe"

            WriteUninstaller "$INSTDIR\uninstall.exe"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "DisplayName" "${APPNAME}"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "UninstallString" "$INSTDIR\uninstall.exe"
          SectionEnd

          Section "Uninstall"
            Delete "$INSTDIR\magshare.exe"
            Delete "$INSTDIR\uninstall.exe"
            Delete "$INSTDIR\magshare.ico"
            RMDir /r "$INSTDIR"
            Delete "$SMPROGRAMS\${APPNAME}\${APPNAME}.lnk"
            RMDir "$SMPROGRAMS\${APPNAME}"
            Delete "$DESKTOP\${APPNAME}.lnk"
            DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}"
          SectionEnd
          EOF

          makensis installer.nsi
        shell: bash

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: magshare-windows
          path: |
            MagShare-1.1.2-Setup.exe
            test/magshare.exe

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: MagShare ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            magshare-linux/magshare_1.1.2_amd64.deb
            magshare-windows/MagShare-1.1.2-Setup.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
